#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Oct 29 19:52:52 2018

@author: GrantAllard
"""

import requests
import pandas as pd
import json 
from pandas.io.json import json_normalize
import numpy
import time

#Set URL
base="http://api.nsf.gov/services/v1/awards.json?"
keyword="keyword=" 
PI="pdPIName=" 
offset_term="&offset="
printFields="printFields="
dateStart="dateStart="
dateEnd="dateEnd="

keywordsearch = (base+keyword)


#Cyberinfrastrucute Call 
term="cyberinfrastructure"
offset="0"
Fields ="id,agency,awardeeCity,awardeeCountryCode,awardeeCounty,awardeeDistrictCode,awardeeName,awardeeStateCode,awardeeZipCode,cfdaNumber,coPDPI, date,startDate,expDate,estimatedTotalAmt, fundsObligatedAmt,dunsNumber,fundProgramName,parentDunsNumber,pdPIName,perfCity,perfCountryCode,perfCounty,perfDistrictCode,perfLocation,perfStateCode,perfZipCode,poName,primaryProgram,transType,title,awardee,poPhone,poEmail,awardeeAddress,perfAddress,publicationResearch,publicationConference,fundAgencyCode,awardAgencyCode,projectOutComesReport,abstractText,piFirstName,piMiddeInitial,piLastName,piPhone,piEmail"
url = (keywordsearch+term+offset_term+offset+"&"+printFields+Fields)
json_data = requests.get(url).json()
json_response = json_data['response']
json_award = json_response['award']
data=json_normalize(json_award)


Fields ="id,agency,awardeeCity,awardeeCountryCode,awardeeCounty,awardeeDistrictCode,awardeeName,awardeeStateCode,awardeeZipCode,cfdaNumber,coPDPI, date,startDate,expDate,estimatedTotalAmt, fundsObligatedAmt,dunsNumber,fundProgramName,parentDunsNumber,pdPIName,perfCity,perfCountryCode,perfCounty,perfDistrictCode,perfLocation,perfStateCode,perfZipCode,poName,primaryProgram,transType,title,awardee,poPhone,poEmail,awardeeAddress,perfAddress,publicationResearch,publicationConference,fundAgencyCode,awardAgencyCode,projectOutComesReport,abstractText,piFirstName,piMiddeInitial,piLastName,piPhone,piEmail"


#Looped Call 
#Set URL
base="http://api.nsf.gov/services/v1/awards.json?"
keyword="keyword=" 
offset_term="&offset="
printFields="printFields="
Fields ="id,agency,awardeeCity,awardeeCountryCode,awardeeCounty,awardeeDistrictCode,awardeeName,awardeeStateCode,awardeeZipCode,cfdaNumber,coPDPI, date,startDate,expDate,estimatedTotalAmt, fundsObligatedAmt,dunsNumber,fundProgramName,parentDunsNumber,pdPIName,perfCity,perfCountryCode,perfCounty,perfDistrictCode,perfLocation,perfStateCode,perfZipCode,poName,primaryProgram,transType,title,awardee,poPhone,poEmail,awardeeAddress,perfAddress,publicationResearch,publicationConference,fundAgencyCode,awardAgencyCode,projectOutComesReport,abstractText,piFirstName,piMiddeInitial,piLastName,piPhone,piEmail"


#Create data frame
cols={"id", "agency", "awardeeCity", "awardeeCountryCode", "awardeeCounty", "awardeeDistrictCode", "awardeeName", "awardeeStateCode", "awardeeZipCode", "cfdaNumber", "coPDPI", "date", "startDate", "expDate", "estimatedTotalAmt", "fundsObligatedAmt", "dunsNumber", "fundProgramName", "parentDunsNumber", "pdPIName", "perfCity", "perfCountryCode", "perfCounty", "perfDistrictCode", "perfLocation", 'perfStateCode', "perfZipCode", "poName", "primaryProgram", "transType", "title", "awardee", "poPhone", "poEmail", "awardeeAddress", "perfAddress", "publicationResearch", "publicationConference", "fundAgencyCode", "awardAgencyCode", "projectOutComesReport", "abstractText", "piFirstName", "piMiddeInitial", "piLastName", "piPhone", "piEmail"}
data=pd.DataFrame(columns=cols)


#Calculate list of offsets
offsets = numpy.arange(0, 3000, 25)
offsets = offsets.tolist()

for i in offsets:
    print("loop start", i)
    term="cyberinfrastructure"
    offset=str(i)
    url = (keywordsearch+term+offset_term+offset+"&"+printFields+Fields)
    
    #Json data
    json_data = requests.get(url).json()
    json_response = json_data['response']
    json_award = json_response['award']
    d=json_normalize(json_award)
    data = data.append(d, ignore_index=True)
    time.sleep(.25)
    print("loop end", i)
    
csvloc = ""
data.to_csv(csvloc)    


#Second Looped Call - "" around cyberinfrastructure
#Set URL
base="http://api.nsf.gov/services/v1/awards.json?"
keyword="keyword=" 
offset_term="&offset="
printFields="printFields="
Fields ="id,agency,awardeeCity,awardeeCountryCode,awardeeCounty,awardeeDistrictCode,awardeeName,awardeeStateCode,awardeeZipCode,cfdaNumber,coPDPI, date,startDate,expDate,estimatedTotalAmt, fundsObligatedAmt,dunsNumber,fundProgramName,parentDunsNumber,pdPIName,perfCity,perfCountryCode,perfCounty,perfDistrictCode,perfLocation,perfStateCode,perfZipCode,poName,primaryProgram,transType,title,awardee,poPhone,poEmail,awardeeAddress,perfAddress,publicationResearch,publicationConference,fundAgencyCode,awardAgencyCode,projectOutComesReport,abstractText,piFirstName,piMiddeInitial,piLastName,piPhone,piEmail"

#Create data frame
cols={"id", "agency", "awardeeCity", "awardeeCountryCode", "awardeeCounty", "awardeeDistrictCode", "awardeeName", "awardeeStateCode", "awardeeZipCode", "cfdaNumber", "coPDPI", "date", "startDate", "expDate", "estimatedTotalAmt", "fundsObligatedAmt", "dunsNumber", "fundProgramName", "parentDunsNumber", "pdPIName", "perfCity", "perfCountryCode", "perfCounty", "perfDistrictCode", "perfLocation", 'perfStateCode', "perfZipCode", "poName", "primaryProgram", "transType", "title", "awardee", "poPhone", "poEmail", "awardeeAddress", "perfAddress", "publicationResearch", "publicationConference", "fundAgencyCode", "awardAgencyCode", "projectOutComesReport", "abstractText", "piFirstName", "piMiddeInitial", "piLastName", "piPhone", "piEmail"}
data2=pd.DataFrame(columns=cols)


#Calculate list of offsets- change term
offsets = numpy.arange(0, 3000, 25)
offsets = offsets.tolist()
for i in offsets:
    print("loop start", i)
    term='"cyberinfrastructure"'
    offset=str(i)
    url = (keywordsearch+term+offset_term+offset+"&"+printFields+Fields)
    
    #Json data
    json_data = requests.get(url).json()
    json_response = json_data['response']
    json_award = json_response['award']
    d=json_normalize(json_award)
    data2 = data2.append(d, ignore_index=True)
    time.sleep(.25)
    print("loop end", i)
    
csvloc = ""
data2.to_csv(csvloc)  



#Looped Call 
#Set URL
base="http://api.nsf.gov/services/v1/awards.json?"
keyword="keyword=" 
offset_term="&offset="
printFields="printFields="
Fields ="id,agency,awardeeCity,awardeeCountryCode,awardeeCounty,awardeeDistrictCode,awardeeName,awardeeStateCode,awardeeZipCode,cfdaNumber,coPDPI, date,startDate,expDate,estimatedTotalAmt, fundsObligatedAmt,dunsNumber,fundProgramName,parentDunsNumber,pdPIName,perfCity,perfCountryCode,perfCounty,perfDistrictCode,perfLocation,perfStateCode,perfZipCode,poName,primaryProgram,transType,title,awardee,poPhone,poEmail,awardeeAddress,perfAddress,publicationResearch,publicationConference,fundAgencyCode,awardAgencyCode,projectOutComesReport,abstractText,piFirstName,piMiddeInitial,piLastName,piPhone,piEmail"


#Create data frame
cols={"id", "agency", "awardeeCity", "awardeeCountryCode", "awardeeCounty", "awardeeDistrictCode", "awardeeName", "awardeeStateCode", "awardeeZipCode", "cfdaNumber", "coPDPI", "date", "startDate", "expDate", "estimatedTotalAmt", "fundsObligatedAmt", "dunsNumber", "fundProgramName", "parentDunsNumber", "pdPIName", "perfCity", "perfCountryCode", "perfCounty", "perfDistrictCode", "perfLocation", 'perfStateCode', "perfZipCode", "poName", "primaryProgram", "transType", "title", "awardee", "poPhone", "poEmail", "awardeeAddress", "perfAddress", "publicationResearch", "publicationConference", "fundAgencyCode", "awardAgencyCode", "projectOutComesReport", "abstractText", "piFirstName", "piMiddeInitial", "piLastName", "piPhone", "piEmail"}
data=pd.DataFrame(columns=cols)


#Calculate list of offsets
offsets = numpy.arange(0, 3000, 25)
offsets = offsets.tolist()

for i in offsets:
    print("loop start", i)
    term="cyberinfrastructure"
    offset=str(i)
    url = (keywordsearch+term+offset_term+offset+"&"+printFields+Fields)
    
    #Json data
    json_data = requests.get(url).json()
    json_response = json_data['response']
    json_award = json_response['award']
    d=json_normalize(json_award)
    data = data.append(d, ignore_index=True)
    time.sleep(.25)
    print("loop end", i)
    
csvloc = ""
data.to_csv(csvloc)    


#Second Looped Call - "" around cyberinfrastructure
#Set URL

base="http://api.nsf.gov/services/v1/awards.json?"
keyword="keyword=" 
offset_term="&offset="
printFields="printFields="
Fields ="id,agency,awardeeCity,awardeeCountryCode,awardeeCounty,awardeeDistrictCode,awardeeName,awardeeStateCode,awardeeZipCode,cfdaNumber,coPDPI, date,startDate,expDate,estimatedTotalAmt, fundsObligatedAmt,dunsNumber,fundProgramName,parentDunsNumber,pdPIName,perfCity,perfCountryCode,perfCounty,perfDistrictCode,perfLocation,perfStateCode,perfZipCode,poName,primaryProgram,transType,title,awardee,poPhone,poEmail,awardeeAddress,perfAddress,publicationResearch,publicationConference,fundAgencyCode,awardAgencyCode,projectOutComesReport,abstractText,piFirstName,piMiddeInitial,piLastName,piPhone,piEmail"
keywordsearch = (base+keyword)

#Create data frame
cols={"id", "agency", "awardeeCity", "awardeeCountryCode", "awardeeCounty", "awardeeDistrictCode", "awardeeName", "awardeeStateCode", "awardeeZipCode", "cfdaNumber", "coPDPI", "date", "startDate", "expDate", "estimatedTotalAmt", "fundsObligatedAmt", "dunsNumber", "fundProgramName", "parentDunsNumber", "pdPIName", "perfCity", "perfCountryCode", "perfCounty", "perfDistrictCode", "perfLocation", 'perfStateCode', "perfZipCode", "poName", "primaryProgram", "transType", "title", "awardee", "poPhone", "poEmail", "awardeeAddress", "perfAddress", "publicationResearch", "publicationConference", "fundAgencyCode", "awardAgencyCode", "projectOutComesReport", "abstractText", "piFirstName", "piMiddeInitial", "piLastName", "piPhone", "piEmail"}
data2=pd.DataFrame(columns=cols)


#Calculate list of offsets- change term
offsets = numpy.arange(0, 20000, 25)
offsets = offsets.tolist()
for i in offsets:
    print("loop start", i)
    term='"cyber infrastructure"'
    offset=str(i)
    url = (keywordsearch+term+offset_term+offset+"&"+printFields+Fields)
    
    #Json data
    json_data = requests.get(url).json()
    json_response = json_data['response']
    json_award = json_response['award']
    d=json_normalize(json_award)
    data2 = data2.append(d, ignore_index=True)
    time.sleep(.25)
    print("loop end", i)
    
csvloc = "/Users/GrantAllard/Documents/Allard Scholarship/Conferences and Journals - CFPs, Etc. /ASIS&T 2018/Cyberinfrastructure poster/Data and Analysis/STORM/Cyber-infrastructure.csv"
data2.to_csv(csvloc)  






